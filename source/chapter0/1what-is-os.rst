什么是操作系统
================================================

.. toctree::
   :hidden:
   :maxdepth: 5

站在一万米的代码空间维度看
----------------------------------

现在的通用操作系统是一个复杂的系统软件，比如 Linux 操作系统达到了千万行的 C 源代码量级。在学习操作系统的初期，我们如果去分析了解这样大规模的软件，要付出巨大的代价。但这样的软件也是有其特有的一些特征。首先，它称为系统软件，简单理解它就是在一个计算机系统范围内使用的软件，可涉及到整个计算机系统。如果这样来看，一个编辑软件，如 Vi Emacs，只涉及到对文本文件的编辑，就不能算了。
而在计算机中安装的 C 标准库 libc（类似的有 Rust 标准库 等）可以算是一个，因为它提供了与OS交互的系统调用接口，其功能覆盖了整个计算机系统，会被许多不同的软件访问。不难看出，操作系统也是这样的一个系统软件。

如果我们站在一万米的高空来看 :ref:`操作系统 <computer-hw-sw>` ，可以发现操作系统这个系统软件干的事主要有两件：一是向下管理计算机硬件和各种外设，二是向上给应用软件提供各种服务帮助。我们可对其进一步描述：操作系统是一个可以管理CPU、内存和各种外设，并管理和服务应用软件的系统软件。这样的描述也是大多数操作系统教材上对操作系统的一个比较概括的定义。为了完成这些工作，操作系统需要知道如何与硬件打交道，如何更好地给应用软件提供服务，这就有一系列操作系统相关的理论、抽象、设计等来支持如何做和做得好的需求。

.. image:: computer-hw-sw.png
   :align: center
   :scale: 50 %
   :name: computer-hw-sw

如果看看我们的身边， Android 应用运行在 ARM 处理器上 Android 操作系统的执行环境中，微软的 Office 应用运行在 x86-64 处理器上 Windows 操作系统的执行环境中，Web Server应用运行在 x86-64 处理器上 Linux 操作系统的执行环境中, Web app 应用运行在 x86-64 或 ARM 处理器上 Chrome OS 操作系统的执行环境中。而在一些嵌入式环境中，操作系统以运行时库的形式与应用程序紧密结合在一起，形成一个可在嵌入式硬件上单一执行的嵌入式应用。所以，在不同的应用场景下，操作系统的边界也是不同的，我们可以把运行时库、图形界面支持库等这些可支持不同应用的系统软件 (System Software) 也看成是操作系统的一部分。

站在应用程序的角度来看，我们可以发现常见的应用程序其实是运行在由硬件、操作系统内核、运行时库、图形界面支持库等所包起来的一个 :ref:`执行环境 (Execution Environment) <exec-env>` 中，应用程序只需根据与系统软件约定好的应用程序二进制接口 (ABI, Application Binary Interface) 来请求执行环境提供的各种服务或功能，从而完成应用程序自己的功能。基于这样的观察，我们可以把操作系统再简单一点地定义为： **应用程序的软件执行环境** 。这样的简单定义能适应在操作系统发展的不同历史时期对操作系统的概括性描述和定义。从这个角度出发，操作系统可以包括运行时库、图形界面支持库等系统软件，

.. image:: EE.png
   :align: center
   :name: exec-env

站在计算机发展的百年时间尺度看
----------------------------------

虽然电子计算机的出现距今才仅仅七十年左右，但计算机技术和操作系统已经发生了巨大的变化。从计算机发展的短暂的历史角度看，操作系统也是从无到有地逐步发展起来的。操作系统主要完成控制硬件控制和为应用程序提供服务这些必不可少的功能，它的历史与计算机的发展史密不可分。操作系统的内涵和功能随着历史的发展也在一直变化、改进中。如今在二十一世纪初期的大众眼中，操作系统就是他们的手机/终端上的软件系统，包括各种应用程序集合，图形界面和网络浏览器是其中重要的组成部分。

其实，操作系统的内涵和外延随着历史的发展也一直在变化，并没有类似于“1+1=2”这样的明确定义。参考地球生物的进化史，我们也给操作系统的进化历史做一个简单的概述，从中可以看到操作系统在各个时间段上包含什么，具有什么样的特征。但无论操作系统的内在实现和具体目标如何变化，其管理计算机硬件，给应用提供服务的核心定位没有变化。

寒武纪生物大爆发时代 [#寒武纪]_
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

在 1946 年出现电子计算机的时候，只有人类操作员 (Operator)来管理和操作机器，还没有没有操作系统 (Operating System)这种事物 。启动，扳开关，装卡片/纸带等比较辛苦的工作都是计算机操作员或者用户自己完成。操作员/用户带着记录有程序和数据的卡片 (Punch Card) 或打孔纸带去操作机器。装好卡片/纸带后，启动卡片/纸带阅读器，把程序和数据读入计算机内存中之后，计算机就开始工作，并把结果也输出到卡片/纸带或显示屏上，最后程序停止。

一般情况下，计算机每次只能执行一个任务， CPU 大部分时间都在等待人类操作员的缓慢操作。由于过低的人工操作效率浪费了计算机的宝贵机时，所以就引入监控程序 (Monitor) 辅助完成输入、输出、加载、运行程序等工作，从而提高了使用计算机的效率。监控程序就是操作系统最开始的雏形，类似寒武纪生物大爆发中著名生物--“三叶虫”。在1954年前后，Swinnerton-Dwyer等在EDSAC（Electronic delay storage automatic calculator）计算机上研制了监控程序，这也许是有记录的最早操作系统雏形 [#UNIX25Y]_ 。这种基于监控程序的初级“辅助操作”过程一直持续到 20 世纪 50 年代中后期。

.. note::

   可以在 :ref:`本书第一章 <link-chapter1>` 看到初级的“三叶虫”操作系统其实就是一个给应用提供各种服务（比如输出字符串）的库，方便了单一应用程序的开发与运行。

泥盆纪 [#泥盆纪]_ 鱼类时代和二叠纪  [#二叠纪]_ 两栖动物时代
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

在 20 世纪 50~60 年代，计算机发展到大型机阶段，而所对应的早期操作系统具有多样化、专用化的特点。计算机生产厂商设计出针对各自硬件的专用操作系统，且大部分用汇编语言编写。这导致操作系统的开发效率不高，不具有跨硬件平台的可移植性，进化比较缓慢。但进化在持续进行，操作系统从“手工操作”和“监控程序”阶段进化到了“批处理”和“多道程序”阶段。

批处理是指把一批作业（古老的术语，可理解为现在的程序）以脱机方式输入到磁带上，并使这批作业能一个接一个地连续处理，流程如下：

1. 将磁带上的一个作业装入内存；
2. 操作系统把运行控制权交给该作业；
3. 当该作业处理完成后，控制权被交还给操作系统；
4. 重复1-3的步骤处理下一个作业直到所有作业处理完毕。

这样能充分地利用计算机系统，应尽量使该系统连续运行，减少CPU的空闲时间。批处理操作系统分为单道批处理系统和多道批处理系统。单道批处理操作系统只能管理内存中的一个（道）作业，无法充分利用大型计算机系统中的所有资源，致使系统整体性能较差。这就像泥盆纪 [#泥盆纪]_ 的史前鱼类--邓氏鱼，有着坚硬的头部铠甲，很强壮，但运动缓慢，灵敏度低，离不开水。

在1956年，由鲍勃.帕特里克(Bob Patrick)在美国通用汽车的系统监督程序(system monitor)的基础上，为美国通用汽车和北美航空公司，在IBM 704计算机上设计了最早的批处理操作系统--GM-NAA I/O [#OSHISTORY]_ 。这个最早的操作系统已经具有了单道批处理系统的基本功能。

在 1964 年， IBM 公司开发了面向 System/360 系列大型计算机的统一可兼容的操作系统—— OS/360  [#MAN]_ ，它是一种多道批处理操作系统。多道批处理操作系统能管理内存中的多个（道）作业，可比较充分地利用计算机系统中的所有资源，提升系统整体性能。

多道批处理操作系统为此采用了多道程序设计技术，就是指允许同时把多个程序放入内存，并允许它们交替在 CPU 中运行，它们共享系统中的各种硬、软件资源。当一道程序因 I/O 请求而暂停运行时， CPU 便立即转去运行另一道程序。这就像二叠纪  [#二叠纪]_ 的两栖动物，但水中暂时有危险或食物不多的时候，可以离开水面到陆地上来，并享用陆地上的动植物资源。

虽然批处理操作系统提高了系统的执行效率，但其缺点是人机交互性差。如果程序员的代码出现错误，必须重新编码，上传内存，再执行。这需要花费以小时和天为单位的时间开销，使得程序员修改和调试程序很不方便。

.. note::

   可以在 :ref:`本书第二章 <link-chapter2>` 看到批处理操作系统的设计实现，以及支持一个一个地执行应用程序的运行过程。而在 :ref:`本书第三章 <link-chapter3>` 的前三节可以看到支持协作式多道程序的操作系统的设计实现，以及支持应用程序主动放弃 CPU 以提高系统整体执行效率的过程。

侏罗纪 [#侏罗纪]_ 与白垩纪 [#白垩纪]_ 的恐龙时代
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

20 世纪 50 年代末，提高人机交互方式的分时操作系统越来越崭露头角。分时是指多个用户和多个程序以很小的时间间隔来共享使用同一台计算机上的 CPU 和其他硬件资源。1961年，麻省理工学院的Fernando Corbató带领团队成功研发了在IBM 709计算机上的CTSS（Compatible Time-Sharing System， 兼容时间共享系统）操作系统 [#UNIX25Y]_ ，它拥有分时系统必须有的特征：支持多个用户分享使用同一台计算机，即宏观上的同一时间段内能完成多个人机交互工作。在CTSS的鼓舞下，1964 年，麻省理工学院、贝尔实验室及美国通用电气公司共同参与研发一个目标远大的操作系统：MULTICS (MULTiplexed Information and Computing System) ，它是一套安装在大型主机上、支持多人多任务的操作系统。 MULTICS 以兼容分时系统 (CTSS) 做基础，建置在美国通用电力公司的大型机 GE-645 ，目标是连接 1000 部终端机，支持 300 位用户同时上线。因 MULTICS 的目标太宏大，而研发工作进度过于缓慢，1969 年 AT&T 的 Bell 实验室从 MULTICS 研发中撤出。CTSS和MULTICS这就像侏罗纪时期体型庞大的食肉恐龙--霸王龙，称霸一时，但进化缓慢，最终灭绝。

但贝尔实验室的两位软件工程师 Thompson 与 Ritchie 借鉴了一些重要的 MULTICS 设计思想和理念，以 C 语言为基础发展出小巧灵活的 UNIX 操作系统 [#UNIX]_ 。UNIX 操作系统的早期版本是完全免费的，可以轻易获得并随意修改，所以它得到了广泛的接受。后来，它成为开发小型机操作系统的起点。由于早期的广泛应用，它已经成为分时操作系统的典范。这好像一种生活在侏罗纪晚期的小型恐龙--始祖鸟，它可能是鸟类的祖先，最终进化为可以展翅高飞的飞鸟。

.. note::

   可以在 :ref:`本书第三章 <link-chapter3>` 的第四节可以看到分时操作系统的设计实现，以及操作系统可强制让应用程序被动放弃 CPU 使得应用可以公平共享系统中的软硬件资源。并且 UNIX 还有虚存、文件、进程等当前操作系统的关键特性，这些内容也在本书的第四章~第七章中有详细的设计描述。泥盆纪

古近纪 [#古近纪]_ 哺乳动物时代
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

20 世纪 70 年代，微型处理器的发展使计算机的应用普及至中小企及个人爱好者，推动了PC( Personal Computer，个人计算机) 的发展，也进一步推动了面向一般大众使用的操作系统的出现。其代表是由微软公司在 20 世纪 80 年代为个人计算机开发（实际是购买）的 DOS操作系统，其特点是简单易用。后来又开发了有图形用户界面（GUI）的操作系统--MS Windows，极大地简化了一般用户使用计算机的难度，使得个人计算机得到了快速的普及和广泛的使用。这里需要注意的是，第一个带 GUI 界面的个人计算机原型起源于伟大却又让人扼腕叹息的施乐帕洛阿图研究中心 (PARC, Palo Alto Research Center) ，PARC 研发出的带有图标、弹出式菜单和重叠窗口的图形交互界面 (GUI, Graphical User Interface)，可利用鼠标的点击动作来进行操控，这是当今我们所使用的 GUI 系统的基础。支持便捷的图形交互界面也成为自 20 世纪 70 年代以来操作系统的主要特征之一。这就像古近纪 [#古近纪]_ 的哺乳动物，能在陆上跑，空中飞和水里游，有很强的适应性和生存能力。

.. note::

   目前支持 GUI 交互接口的操作系统设计实现在本书中还没有对应的章节。但其操作系统的内核其实与分时操作系统的设计实现思路基本是一致的。如果在本书设计的简单分时操作系统的基础上，添加一个图形外设的驱动和一个简单的 GUI 窗口系统，也许是一个有趣的实验内容。

第四纪智人时代 [#人类简史]_
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

21 世纪以来， Internet 和移动互联网的迅猛发展，使得在服务器领域和个人终端的应用与需求大增，计算机已经进入了人们的日常生活中。iOS 和 Android 操作系统是21世纪个人终端操作系统的代表，Linux 在巨型机到数据中心服务器操作系统中占据了统治地位。以 Android 系统为例，Android 操作系统是一个包括 Linux 操作系统内核、基于 Java 的中间件、用户界面和关键应用软件的移动设备软件栈集合。这里介绍一下广泛用在服务器领域和个人终端中的操作系统内核--Linux 操作系统内核。1991 年 8 月，芬兰学生 Linus Torvalds \(林纳斯·托瓦兹\) 在 comp.os.minix 新闻组贴上了以下这段话： 


  ＂你好，所有使用 minix 的人 -我正在为 386 ( 486 ) AT 做一个免费的操作系统 ( 只是为了爱好 )...″


而他所说的“爱好″成为了大家都知道的 Linux 操作系统内核。这个时代的操作系统的特征是联网，发挥网络的吞吐量和低延迟是这个时代的网络操作系统追求的目标。 Linux就像是第四纪出现的智人，横扫陆地上的各种强大生物，出现在生物界的顶端，统治了整个地球。

.. note::

   目前支持联网的操作系统设计实现在本书中还没有对应的章节。但其操作系统的内核其实与分时操作系统的设计实现思路基本是一致的。如果在本书设计的简单分时操作系统的基础上，添加一个网卡外设的驱动和一个简单的网络协议栈，也许是另一个有趣的实验内容。

二十一世纪神人时代 [#未来简史]_
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

当前，大数据、人工智能、机器学习、高速移动互联网络、AR/VR 对操作系统等系统软件带来了新的挑战。如何有效支持和利用这些技术是未来操作系统的方向。

在 2020 年，我们看到了华为逐步推出的鸿蒙系统；小米也推出了物联网软件平台小米 Vela ；阿里推出了 AliOS Thing；腾讯推出了Tencent OS；苹果公司接连推出 A14、M1 等基于 ARM 的 CPU，逐步开始淘汰 X86CPU；微软推出 Windows 10 IoT，Google 推出 Fuchsia OS，也都在做着各种云、边、端的技术调整和创新。

大家好像都意识到，不仅仅是人工智能和机器学习，下一个与人工智能充分融合，并分布式特征的操作系统即将到来，并试图通过这种操作系统带来的连贯用户体验，打通从数据中心、服务器、桌面、移动端、边缘设备等的整个 AI 和物联网 (IoT, Internet of Things) 的生态。也许这种未来操作系统与之前的操作系统相比，其最大的不同是具有了人工智能的属性，跳出了单个设备节点，通过多种网络从不同维度来管理多个设备。这种操作系统也许这就是尤瓦尔·赫拉利所著的“未来简史” 书 [#未来简史]_ 中描述的“无所不能”的神人。

目前支持AIoT的操作系统设计实现在本书中还没有对应的章节，不过我们的同学也设计了 `zCore操作系统 <https://github.com/rcore-os/zCore>`_ ，欢迎看完本书的同学能够尝试参与或独立设计面向未来的操作系统。


.. [#寒武纪] 5亿年前的寒武纪期间生物种类突然丰富起来，呈爆炸式的增加，期间的典型生物是三叶虫。
.. [#泥盆纪] 4亿年前的泥盆纪期间鱼类空前繁荣，并在晚期出现了两栖动物。
.. [#二叠纪] 3亿年前的二叠纪期间是一个承上启下的阶段，两栖类动物最繁盛，爬行动物逐渐繁荣。 
.. [#侏罗纪] 2亿年前的侏罗纪期间温暖潮湿，爬行类动物的代表--恐龙成为当时的统治者，哺乳动物开始发展。
.. [#白垩纪] 1亿年前的白垩纪期间温暖干旱，恐龙经历了从鼎盛到灭绝的巨大变化，哺乳动物兴起。
.. [#古近纪] 0.6亿年前的古近纪时期，哺乳动物迅速发展，且形态多样化，逐渐统治了地面。
.. [#人类简史] 尤瓦尔·赫拉利所著的“人类简史” 书中提到的智人遍布地球，可类比现在的Linux 。
.. [#未来简史] 尤瓦尔·赫拉利所著的“未来简史” 书中描述的神人可类比于未来支持AI的分布式操作系统 。
.. [#UNIX25Y] Peter H.Salus, A Quarter Century of UNIX, Addison-Wesley Publishing, 1997
.. [#UNIX] Brain W. Kernighan, UNIX: A History and a Memoir, Independently published, 2020 
.. [#OSHISTORY] Maarten Bullynck, What is an Operating System? A historical investigation (1954–1964), https://halshs.archives-ouvertes.fr/halshs-01541602/document
.. [#MAN] 布鲁克斯(Brooks, F. P.), 人月神话(40周年中文纪念版),2015
